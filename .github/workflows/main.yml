name: Main CI
on: [push, pull_request]
jobs:
  build:
    name: Build the project
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        projectPath:
          - airborne
        testMode:
          - playmode

    steps:
      # Checkout
      - uses: actions/checkout@v2
        name: Checkout Repository
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v2
        with: 
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath}}
          restore-keys: |
            Library-MyProjectName-
            Library-

      # Run tests
      - uses: game-ci/unity-test-runner@v2
        name: Run Tests
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          
      # Upload Test Artifacts
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test Results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath}}
      
      # Build
      - name: Build Project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: WebGL

      # Upload Build Artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build
